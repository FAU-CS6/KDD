name: Push-Actions

on: [push]

jobs:
  pre_commit_validation:
    name: Validate that pre-commit hooks have run
    runs-on: ubuntu-latest
    steps:
      - name: Set up Git repository
        uses: actions/checkout@v4

      - name: Run hooks again to validate they have run
        uses: xu-cheng/texlive-action@v2
        with:
          run: |
            apk update
            apk upgrade
            apk add --virtual build-dependencies build-base gcc wget git
            apk add --no-cache python3 python3-dev py3-pip nodejs npm
            python3 -m venv venv
            source venv/bin/activate
            pip3 install pre-commit
            git config --global --add safe.directory /github/workspace
            pre-commit run --verbose --all-files > pre-commit-validation.txt & cat pre-commit-validation.txt
            if cat pre-commit-validation.txt | grep -q Failed;
            then
              echo "Pre-commit run did not run on local machine."
              exit 1
            else
              echo "Pre-commit did run on local machine."
            fi

  build_lecture:
    name: Build lecture PDFs
    runs-on: ubuntu-latest
    needs: [pre_commit_validation]
    if: contains(needs.*.result, 'success')
    steps:
      - name: Set up Git repository
        uses: actions/checkout@v4

      - name: Build figures
        uses: ./lecture/
        env:
          WORKSPACE: ${{ github.workspace }}
        with:
          run: |
            cd $WORKSPACE/lecture
            make figures

      - name: Compile LaTeX document
        uses: xu-cheng/texlive-action@v2
        with:
          run: |
            apk add make
            apk add git
            git config --global --add safe.directory /github/workspace
            git config --global --add safe.directory /home/runner/work/KDD/KDD
            cd lecture
            ls -la img
            make all-wo-figures

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: Lecture Slides
          path: |
            lecture/output/*.pdf
            lecture/output/*.log
          retention-days: 90

  build_exercise:
    name: Build the exercise archives
    runs-on: ubuntu-latest
    needs: [pre_commit_validation]
    if: contains(needs.*.result, 'success')
    steps:
      - name: Set up Git repository
        uses: actions/checkout@v4

      - name: Create the exercise archives
        uses: xu-cheng/texlive-action@v2
        with:
          run: |
            apk update
            apk upgrade
            apk add --virtual build-dependencies build-base gcc wget git
            apk add --no-cache python3 python3-dev py3-pip nodejs npm
            python3 -m venv venv
            source venv/bin/activate
            pip3 install -r exercise/requirements.txt
            cd exercise
            make all

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: Exercise Archives
          path: |
            exercise/output/*.zip
          retention-days: 90

  build_submission:
    name: Build the submission PDFs
    runs-on: ubuntu-latest
    needs: [pre_commit_validation]
    if: contains(needs.*.result, 'success')
    steps:
      - name: Set up Git repository
        uses: actions/checkout@v4

      - name: Create the submission PDFs
        uses: xu-cheng/texlive-action@v2
        with:
          run: |
            apk update
            apk upgrade
            apk add --virtual build-dependencies build-base gcc wget git
            cd submission
            make all

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: Submission PDFs
          path: |
            submission/output/*.pdf
          retention-days: 90

  publish_artifacts:
    name: Publish artifacts to GitHub Pages
    runs-on: ubuntu-latest
    needs: [build_lecture, build_exercise, build_submission]
    if: success()
    steps:
      - name: Set up Git repository
        uses: actions/checkout@v4

      - name: Create artifacts directory
        run: mkdir -p artifacts

      - name: Create badges directory
        run: mkdir -p artifacts/gh-badges

      - name: Download Lecture Slides
        uses: actions/download-artifact@v4
        with:
          name: Lecture Slides
          path: artifacts/lecture-slides

      - name: Download Exercise Archives
        uses: actions/download-artifact@v4
        with:
          name: Exercise Archives
          path: artifacts/exercise-archives

      - name: Download Submission PDFs
        uses: actions/download-artifact@v4
        with:
          name: Submission PDFs
          path: artifacts/submission-pdfs

      - name: Create ZIP files
        run: |
          cd artifacts
          zip -r lecture-slides.zip lecture-slides/
          zip -r exercise-archives.zip exercise-archives/
          zip -r submission-pdfs.zip submission-pdfs/

      - name: Generate Badge Images
        run: |
          SHORT_SHA=$(git rev-parse --short HEAD)
          npm install -g badge-maker
          npx badge-maker "Download Lectures" "Version ${SHORT_SHA}" "#41748D" @flat-square > artifacts/gh-badges/lectures-badge.svg
          npx badge-maker "Download Exercises" "Version ${SHORT_SHA}" "#228848" @flat-square> artifacts/gh-badges/exercises-badge.svg
          npx badge-maker "Download Submissions" "Version ${SHORT_SHA}" "#971B2F" @flat-square> artifacts/gh-badges/submissions-badge.svg

      - name: Create index.html
        run: |
          cat > artifacts/index.html << 'EOL'
          <!DOCTYPE html>
          <html>
          <head>
            <title>KDD Course Materials</title>
            <style>
              body { font-family: Arial, sans-serif; max-width: 600px; margin: 20px auto; padding: 20px; }
              h1 { color: #333; }
              h2 { color: #555; margin-top: 20px; }
              ul { list-style-type: none; padding: 0; }
              li { margin: 10px 0; }
              a { color: #0366d6; text-decoration: none; }
              a:hover { text-decoration: underline; }
              .badge-container { margin-top: 20px; }
              .badge-container img { margin-right: 10px; }
            </style>
          </head>
          <body>
            <h1>KDD Course Materials</h1>

            <h2>Download as ZIP</h2>
            <ul>
              <li><a href="lecture-slides.zip">Lecture Slides (ZIP)</a></li>
              <li><a href="exercise-archives.zip">Exercise Archives (ZIP)</a></li>
              <li><a href="submission-pdfs.zip">Submission PDFs (ZIP)</a></li>
            </ul>

            <div class="badge-container">
              <h2>Badges</h2>
              <p>
                <a href="lecture-slides.zip"><img src="gh-badges/lectures-badge.svg" alt="Lectures Badge"></a>
                <a href="exercise-archives.zip"><img src="gh-badges/exercises-badge.svg" alt="Exercises Badge"></a>
                <a href="submission-pdfs.zip"><img src="gh-badges/submissions-badge.svg" alt="Submissions Badge"></a>
              </p>
            </div>
          </body>
          </html>
          EOL

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./artifacts
          force_orphan: true
