#+title: KDD - Knowledge Discovery in Databases

* Responsibilities
(Changed in 2024SS since Melanie B. Sigl is not participating this time)
** Lecture
  1. *Course Intro* - Dominik Probst
  2. *Introduction* - Dominik Probst
  3. *Data* - Dominik Probst
  4. *Preprocessing* - Dominik Probst
  5. *OLAP* - Dominik Probst
  6. *Mining Frequent Patterns, Associations and Correlations* - Dominik Probst
  7. *Classification* - Dominik Probst
  8. *Cluster Analysis* - Dominik Probst
  9. *Outlier Analysis* - Dominik Probst
  10. *Current Research at CS6* - Dominik Probst

** Exercise
  1. *Introduction to Python & Pandas* - Dominik Probst
  2. *Data analysis & data preprocessing* - Dominik Probst
  3. *Frequent Patterns* - Dominik Probst
  4. *Classification* - Dominik Probst
  5. *Clustering* - Dominik Probst

** Submission
  1. *Frequent Patterns* - Dominik Probst
  2. *Classification* - Dominik Probst
  3. *Clustering* - Dominik Probst

* Summer semester 2024
  - Semester duration: 15 April 2024 â€“ 19 July 2024
  - Public holidays:
    - Wednesday, 1 May 2024
    - Thursday, 9 May 2024
    - Monday, 20 May 2024
    - Thursday, 30 May 2024
  - FAU specific holidays (no lectures and exercises):
    - Tuesday, 21 May 2024
    - Friday, 31 May 2024

* Setup for Building Lecture Slides Locally
To build these lecture slides locally on your machine you'll need an up-to-date
version of LaTeX such as [[https://www.tug.org/texlive/][texlive]] or [[https://miktex.org/][MikTex]].

* Setup for Commiting
We use the framework [[https://pre-commit.com/][pre-commit]] to manage our
pre-commit hooks. This simplifies the maintenance of the hooks - especially
on heterogeneous systems - but requires an initial installation process
of the individual users.

First, the framework itself must be installed. This process is explained on
the framework's website under [[https://pre-commit.com/#install]["Installation"]].

The second thing that needs to be done is to install the pre-commit hooks themselves.
This can be achieved by running the command =pre-commit install= in the root
directory of this project.

We assume that each commit has been validated with these pre-commit hooks
and will not accept pull requests that contain unvalidated commits
(the pre-commit hooks are also checked again on the server side by a GitHub action).
